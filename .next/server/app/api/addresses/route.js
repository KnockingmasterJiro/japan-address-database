"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/addresses/route";
exports.ids = ["app/api/addresses/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Faddresses%2Froute&page=%2Fapi%2Faddresses%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Faddresses%2Froute.ts&appDir=C%3A%5CVercel%5Cprojects%5Cjapan-facility-database%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CVercel%5Cprojects%5Cjapan-facility-database&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Faddresses%2Froute&page=%2Fapi%2Faddresses%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Faddresses%2Froute.ts&appDir=C%3A%5CVercel%5Cprojects%5Cjapan-facility-database%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CVercel%5Cprojects%5Cjapan-facility-database&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Vercel_projects_japan_facility_database_app_api_addresses_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/addresses/route.ts */ \"(rsc)/./app/api/addresses/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/addresses/route\",\n        pathname: \"/api/addresses\",\n        filename: \"route\",\n        bundlePath: \"app/api/addresses/route\"\n    },\n    resolvedPagePath: \"C:\\\\Vercel\\\\projects\\\\japan-facility-database\\\\app\\\\api\\\\addresses\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Vercel_projects_japan_facility_database_app_api_addresses_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/addresses/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhZGRyZXNzZXMlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmFkZHJlc3NlcyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmFkZHJlc3NlcyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVmVyY2VsJTVDcHJvamVjdHMlNUNqYXBhbi1mYWNpbGl0eS1kYXRhYmFzZSU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1ZlcmNlbCU1Q3Byb2plY3RzJTVDamFwYW4tZmFjaWxpdHktZGF0YWJhc2UmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQzRCO0FBQ3pHO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vamFwYW4tYWRkcmVzcy1kYXRhYmFzZS8/ZTk2NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxWZXJjZWxcXFxccHJvamVjdHNcXFxcamFwYW4tZmFjaWxpdHktZGF0YWJhc2VcXFxcYXBwXFxcXGFwaVxcXFxhZGRyZXNzZXNcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2FkZHJlc3Nlcy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2FkZHJlc3Nlc1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvYWRkcmVzc2VzL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcVmVyY2VsXFxcXHByb2plY3RzXFxcXGphcGFuLWZhY2lsaXR5LWRhdGFiYXNlXFxcXGFwcFxcXFxhcGlcXFxcYWRkcmVzc2VzXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9hZGRyZXNzZXMvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Faddresses%2Froute&page=%2Fapi%2Faddresses%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Faddresses%2Froute.ts&appDir=C%3A%5CVercel%5Cprojects%5Cjapan-facility-database%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CVercel%5Cprojects%5Cjapan-facility-database&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/addresses/route.ts":
/*!************************************!*\
  !*** ./app/api/addresses/route.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./lib/db.ts\");\n\n\nasync function GET(request) {\n    const { searchParams } = new URL(request.url);\n    const prefCode = searchParams.get(\"prefecture\");\n    const cityCode = searchParams.get(\"city\");\n    const query = searchParams.get(\"query\")?.toLowerCase();\n    const page = Number.parseInt(searchParams.get(\"page\") || \"1\");\n    const limit = Number.parseInt(searchParams.get(\"limit\") || \"100\");\n    const offset = (page - 1) * limit;\n    try {\n        // データベースから住所データを取得\n        let addresses = await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.getAddressesByPrefecture)(prefCode || undefined, limit, offset);\n        // 市区町村コードでフィルタリング\n        if (cityCode) {\n            addresses = addresses.filter((address)=>address.city_code === cityCode);\n        }\n        // 検索クエリでフィルタリング\n        if (query) {\n            addresses = addresses.filter((address)=>address.pref.toLowerCase().includes(query) || address.city.toLowerCase().includes(query) || address.town.toLowerCase().includes(query));\n        }\n        // 総件数を取得\n        const totalCount = await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.getTotalAddressCount)();\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            count: totalCount,\n            page,\n            limit,\n            totalPages: Math.ceil(totalCount / limit),\n            addresses\n        });\n    } catch (error) {\n        console.error(\"Error fetching address data:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to fetch address data\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2FkZHJlc3Nlcy9yb3V0ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMEM7QUFDK0I7QUFFbEUsZUFBZUcsSUFBSUMsT0FBZ0I7SUFDeEMsTUFBTSxFQUFFQyxZQUFZLEVBQUUsR0FBRyxJQUFJQyxJQUFJRixRQUFRRyxHQUFHO0lBQzVDLE1BQU1DLFdBQVdILGFBQWFJLEdBQUcsQ0FBQztJQUNsQyxNQUFNQyxXQUFXTCxhQUFhSSxHQUFHLENBQUM7SUFDbEMsTUFBTUUsUUFBUU4sYUFBYUksR0FBRyxDQUFDLFVBQVVHO0lBQ3pDLE1BQU1DLE9BQU9DLE9BQU9DLFFBQVEsQ0FBQ1YsYUFBYUksR0FBRyxDQUFDLFdBQVc7SUFDekQsTUFBTU8sUUFBUUYsT0FBT0MsUUFBUSxDQUFDVixhQUFhSSxHQUFHLENBQUMsWUFBWTtJQUMzRCxNQUFNUSxTQUFTLENBQUNKLE9BQU8sS0FBS0c7SUFFNUIsSUFBSTtRQUNGLG1CQUFtQjtRQUNuQixJQUFJRSxZQUFZLE1BQU1qQixpRUFBd0JBLENBQUNPLFlBQVlXLFdBQVdILE9BQU9DO1FBRTdFLGtCQUFrQjtRQUNsQixJQUFJUCxVQUFVO1lBQ1pRLFlBQVlBLFVBQVVFLE1BQU0sQ0FBQyxDQUFDQyxVQUFZQSxRQUFRQyxTQUFTLEtBQUtaO1FBQ2xFO1FBRUEsZ0JBQWdCO1FBQ2hCLElBQUlDLE9BQU87WUFDVE8sWUFBWUEsVUFBVUUsTUFBTSxDQUMxQixDQUFDQyxVQUNDQSxRQUFRRSxJQUFJLENBQUNYLFdBQVcsR0FBR1ksUUFBUSxDQUFDYixVQUNwQ1UsUUFBUUksSUFBSSxDQUFDYixXQUFXLEdBQUdZLFFBQVEsQ0FBQ2IsVUFDcENVLFFBQVFLLElBQUksQ0FBQ2QsV0FBVyxHQUFHWSxRQUFRLENBQUNiO1FBRTFDO1FBRUEsU0FBUztRQUNULE1BQU1nQixhQUFhLE1BQU16Qiw2REFBb0JBO1FBRTdDLE9BQU9GLHFEQUFZQSxDQUFDNEIsSUFBSSxDQUFDO1lBQ3ZCQyxPQUFPRjtZQUNQZDtZQUNBRztZQUNBYyxZQUFZQyxLQUFLQyxJQUFJLENBQUNMLGFBQWFYO1lBQ25DRTtRQUNGO0lBQ0YsRUFBRSxPQUFPZSxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxnQ0FBZ0NBO1FBQzlDLE9BQU9qQyxxREFBWUEsQ0FBQzRCLElBQUksQ0FBQztZQUFFSyxPQUFPO1FBQStCLEdBQUc7WUFBRUUsUUFBUTtRQUFJO0lBQ3BGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qYXBhbi1hZGRyZXNzLWRhdGFiYXNlLy4vYXBwL2FwaS9hZGRyZXNzZXMvcm91dGUudHM/ZjI0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVzcG9uc2UgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIlxyXG5pbXBvcnQgeyBnZXRBZGRyZXNzZXNCeVByZWZlY3R1cmUsIGdldFRvdGFsQWRkcmVzc0NvdW50IH0gZnJvbSBcIkAvbGliL2RiXCJcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQocmVxdWVzdDogUmVxdWVzdCkge1xyXG4gIGNvbnN0IHsgc2VhcmNoUGFyYW1zIH0gPSBuZXcgVVJMKHJlcXVlc3QudXJsKVxyXG4gIGNvbnN0IHByZWZDb2RlID0gc2VhcmNoUGFyYW1zLmdldChcInByZWZlY3R1cmVcIilcclxuICBjb25zdCBjaXR5Q29kZSA9IHNlYXJjaFBhcmFtcy5nZXQoXCJjaXR5XCIpXHJcbiAgY29uc3QgcXVlcnkgPSBzZWFyY2hQYXJhbXMuZ2V0KFwicXVlcnlcIik/LnRvTG93ZXJDYXNlKClcclxuICBjb25zdCBwYWdlID0gTnVtYmVyLnBhcnNlSW50KHNlYXJjaFBhcmFtcy5nZXQoXCJwYWdlXCIpIHx8IFwiMVwiKVxyXG4gIGNvbnN0IGxpbWl0ID0gTnVtYmVyLnBhcnNlSW50KHNlYXJjaFBhcmFtcy5nZXQoXCJsaW1pdFwiKSB8fCBcIjEwMFwiKVxyXG4gIGNvbnN0IG9mZnNldCA9IChwYWdlIC0gMSkgKiBsaW1pdFxyXG5cclxuICB0cnkge1xyXG4gICAgLy8g44OH44O844K/44OZ44O844K544GL44KJ5L2P5omA44OH44O844K/44KS5Y+W5b6XXHJcbiAgICBsZXQgYWRkcmVzc2VzID0gYXdhaXQgZ2V0QWRkcmVzc2VzQnlQcmVmZWN0dXJlKHByZWZDb2RlIHx8IHVuZGVmaW5lZCwgbGltaXQsIG9mZnNldClcclxuXHJcbiAgICAvLyDluILljLrnlLrmnZHjgrPjg7zjg4njgafjg5XjgqPjg6vjgr/jg6rjg7PjgrBcclxuICAgIGlmIChjaXR5Q29kZSkge1xyXG4gICAgICBhZGRyZXNzZXMgPSBhZGRyZXNzZXMuZmlsdGVyKChhZGRyZXNzKSA9PiBhZGRyZXNzLmNpdHlfY29kZSA9PT0gY2l0eUNvZGUpXHJcbiAgICB9XHJcblxyXG4gICAgLy8g5qSc57Si44Kv44Ko44Oq44Gn44OV44Kj44Or44K/44Oq44Oz44KwXHJcbiAgICBpZiAocXVlcnkpIHtcclxuICAgICAgYWRkcmVzc2VzID0gYWRkcmVzc2VzLmZpbHRlcihcclxuICAgICAgICAoYWRkcmVzcykgPT5cclxuICAgICAgICAgIGFkZHJlc3MucHJlZi50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHF1ZXJ5KSB8fFxyXG4gICAgICAgICAgYWRkcmVzcy5jaXR5LnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMocXVlcnkpIHx8XHJcbiAgICAgICAgICBhZGRyZXNzLnRvd24udG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhxdWVyeSksXHJcbiAgICAgIClcclxuICAgIH1cclxuXHJcbiAgICAvLyDnt4/ku7bmlbDjgpLlj5blvpdcclxuICAgIGNvbnN0IHRvdGFsQ291bnQgPSBhd2FpdCBnZXRUb3RhbEFkZHJlc3NDb3VudCgpXHJcblxyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcclxuICAgICAgY291bnQ6IHRvdGFsQ291bnQsXHJcbiAgICAgIHBhZ2UsXHJcbiAgICAgIGxpbWl0LFxyXG4gICAgICB0b3RhbFBhZ2VzOiBNYXRoLmNlaWwodG90YWxDb3VudCAvIGxpbWl0KSxcclxuICAgICAgYWRkcmVzc2VzLFxyXG4gICAgfSlcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcihcIkVycm9yIGZldGNoaW5nIGFkZHJlc3MgZGF0YTpcIiwgZXJyb3IpXHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBlcnJvcjogXCJGYWlsZWQgdG8gZmV0Y2ggYWRkcmVzcyBkYXRhXCIgfSwgeyBzdGF0dXM6IDUwMCB9KVxyXG4gIH1cclxufSJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJnZXRBZGRyZXNzZXNCeVByZWZlY3R1cmUiLCJnZXRUb3RhbEFkZHJlc3NDb3VudCIsIkdFVCIsInJlcXVlc3QiLCJzZWFyY2hQYXJhbXMiLCJVUkwiLCJ1cmwiLCJwcmVmQ29kZSIsImdldCIsImNpdHlDb2RlIiwicXVlcnkiLCJ0b0xvd2VyQ2FzZSIsInBhZ2UiLCJOdW1iZXIiLCJwYXJzZUludCIsImxpbWl0Iiwib2Zmc2V0IiwiYWRkcmVzc2VzIiwidW5kZWZpbmVkIiwiZmlsdGVyIiwiYWRkcmVzcyIsImNpdHlfY29kZSIsInByZWYiLCJpbmNsdWRlcyIsImNpdHkiLCJ0b3duIiwidG90YWxDb3VudCIsImpzb24iLCJjb3VudCIsInRvdGFsUGFnZXMiLCJNYXRoIiwiY2VpbCIsImVycm9yIiwiY29uc29sZSIsInN0YXR1cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/api/addresses/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/address-data.ts":
/*!*****************************!*\
  !*** ./lib/address-data.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchGeoloniaAddressData: () => (/* binding */ fetchGeoloniaAddressData),\n/* harmony export */   prefectures: () => (/* binding */ prefectures),\n/* harmony export */   regions: () => (/* binding */ regions)\n/* harmony export */ });\n// Geolonia住所データの構造を定義\n// 都道府県データ\nconst prefectures = [\n    {\n        code: \"01\",\n        name: \"北海道\",\n        region: \"北海道\"\n    },\n    {\n        code: \"02\",\n        name: \"青森県\",\n        region: \"東北\"\n    },\n    {\n        code: \"03\",\n        name: \"岩手県\",\n        region: \"東北\"\n    },\n    {\n        code: \"04\",\n        name: \"宮城県\",\n        region: \"東北\"\n    },\n    {\n        code: \"05\",\n        name: \"秋田県\",\n        region: \"東北\"\n    },\n    {\n        code: \"06\",\n        name: \"山形県\",\n        region: \"東北\"\n    },\n    {\n        code: \"07\",\n        name: \"福島県\",\n        region: \"東北\"\n    },\n    {\n        code: \"08\",\n        name: \"茨城県\",\n        region: \"関東\"\n    },\n    {\n        code: \"09\",\n        name: \"栃木県\",\n        region: \"関東\"\n    },\n    {\n        code: \"10\",\n        name: \"群馬県\",\n        region: \"関東\"\n    },\n    {\n        code: \"11\",\n        name: \"埼玉県\",\n        region: \"関東\"\n    },\n    {\n        code: \"12\",\n        name: \"千葉県\",\n        region: \"関東\"\n    },\n    {\n        code: \"13\",\n        name: \"東京都\",\n        region: \"関東\"\n    },\n    {\n        code: \"14\",\n        name: \"神奈川県\",\n        region: \"関東\"\n    },\n    {\n        code: \"15\",\n        name: \"新潟県\",\n        region: \"中部\"\n    },\n    {\n        code: \"16\",\n        name: \"富山県\",\n        region: \"中部\"\n    },\n    {\n        code: \"17\",\n        name: \"石川県\",\n        region: \"中部\"\n    },\n    {\n        code: \"18\",\n        name: \"福井県\",\n        region: \"中部\"\n    },\n    {\n        code: \"19\",\n        name: \"山梨県\",\n        region: \"中部\"\n    },\n    {\n        code: \"20\",\n        name: \"長野県\",\n        region: \"中部\"\n    },\n    {\n        code: \"21\",\n        name: \"岐阜県\",\n        region: \"中部\"\n    },\n    {\n        code: \"22\",\n        name: \"静岡県\",\n        region: \"中部\"\n    },\n    {\n        code: \"23\",\n        name: \"愛知県\",\n        region: \"中部\"\n    },\n    {\n        code: \"24\",\n        name: \"三重県\",\n        region: \"近畿\"\n    },\n    {\n        code: \"25\",\n        name: \"滋賀県\",\n        region: \"近畿\"\n    },\n    {\n        code: \"26\",\n        name: \"京都府\",\n        region: \"近畿\"\n    },\n    {\n        code: \"27\",\n        name: \"大阪府\",\n        region: \"近畿\"\n    },\n    {\n        code: \"28\",\n        name: \"兵庫県\",\n        region: \"近畿\"\n    },\n    {\n        code: \"29\",\n        name: \"奈良県\",\n        region: \"近畿\"\n    },\n    {\n        code: \"30\",\n        name: \"和歌山県\",\n        region: \"近畿\"\n    },\n    {\n        code: \"31\",\n        name: \"鳥取県\",\n        region: \"中国\"\n    },\n    {\n        code: \"32\",\n        name: \"島根県\",\n        region: \"中国\"\n    },\n    {\n        code: \"33\",\n        name: \"岡山県\",\n        region: \"中国\"\n    },\n    {\n        code: \"34\",\n        name: \"広島県\",\n        region: \"中国\"\n    },\n    {\n        code: \"35\",\n        name: \"山口県\",\n        region: \"中国\"\n    },\n    {\n        code: \"36\",\n        name: \"徳島県\",\n        region: \"四国\"\n    },\n    {\n        code: \"37\",\n        name: \"香川県\",\n        region: \"四国\"\n    },\n    {\n        code: \"38\",\n        name: \"愛媛県\",\n        region: \"四国\"\n    },\n    {\n        code: \"39\",\n        name: \"高知県\",\n        region: \"四国\"\n    },\n    {\n        code: \"40\",\n        name: \"福岡県\",\n        region: \"九州\"\n    },\n    {\n        code: \"41\",\n        name: \"佐賀県\",\n        region: \"九州\"\n    },\n    {\n        code: \"42\",\n        name: \"長崎県\",\n        region: \"九州\"\n    },\n    {\n        code: \"43\",\n        name: \"熊本県\",\n        region: \"九州\"\n    },\n    {\n        code: \"44\",\n        name: \"大分県\",\n        region: \"九州\"\n    },\n    {\n        code: \"45\",\n        name: \"宮崎県\",\n        region: \"九州\"\n    },\n    {\n        code: \"46\",\n        name: \"鹿児島県\",\n        region: \"九州\"\n    },\n    {\n        code: \"47\",\n        name: \"沖縄県\",\n        region: \"九州\"\n    }\n];\n// 地方区分\nconst regions = [\n    {\n        id: \"hokkaido\",\n        name: \"北海道\"\n    },\n    {\n        id: \"tohoku\",\n        name: \"東北\"\n    },\n    {\n        id: \"kanto\",\n        name: \"関東\"\n    },\n    {\n        id: \"chubu\",\n        name: \"中部\"\n    },\n    {\n        id: \"kinki\",\n        name: \"近畿\"\n    },\n    {\n        id: \"chugoku\",\n        name: \"中国\"\n    },\n    {\n        id: \"shikoku\",\n        name: \"四国\"\n    },\n    {\n        id: \"kyushu\",\n        name: \"九州\"\n    }\n];\n// 実際のアプリケーションでは、Geoloniaのデータを取得する関数\nasync function fetchGeoloniaAddressData(prefCode, limit = 100) {\n    // データベースからデータを取得する\n    try {\n        const response = await fetch(`/api/addresses${prefCode ? `?prefecture=${prefCode}` : \"\"}&limit=${limit}`);\n        if (!response.ok) {\n            throw new Error(\"住所データの取得に失敗しました\");\n        }\n        const data = await response.json();\n        return data.addresses;\n    } catch (error) {\n        console.error(\"住所データの取得エラー:\", error);\n        return [];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/address-data.ts\n");

/***/ }),

/***/ "(rsc)/./lib/db.ts":
/*!*******************!*\
  !*** ./lib/db.ts ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   batchProcessAddresses: () => (/* binding */ batchProcessAddresses),\n/* harmony export */   getAddressCountByCity: () => (/* binding */ getAddressCountByCity),\n/* harmony export */   getAddressCountByPrefecture: () => (/* binding */ getAddressCountByPrefecture),\n/* harmony export */   getAddressesByPrefecture: () => (/* binding */ getAddressesByPrefecture),\n/* harmony export */   getTotalAddressCount: () => (/* binding */ getTotalAddressCount),\n/* harmony export */   prisma: () => (/* binding */ prisma),\n/* harmony export */   saveAddressesToDatabase: () => (/* binding */ saveAddressesToDatabase),\n/* harmony export */   setupInitialData: () => (/* binding */ setupInitialData),\n/* harmony export */   sql: () => (/* binding */ sql)\n/* harmony export */ });\n/* harmony import */ var _neondatabase_serverless__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @neondatabase/serverless */ \"(rsc)/./node_modules/@neondatabase/serverless/index.mjs\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _address_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./address-data */ \"(rsc)/./lib/address-data.ts\");\n\n\n\n// PrismaClientのグローバルインスタンスを作成\nconst globalForPrisma = global;\n// 開発環境で複数のPrismaClientインスタンスが作成されるのを防ぐ\nconst prisma = globalForPrisma.prisma || new _prisma_client__WEBPACK_IMPORTED_MODULE_1__.PrismaClient({\n    log:  true ? [\n        \"query\",\n        \"error\",\n        \"warn\"\n    ] : 0\n});\nif (true) globalForPrisma.prisma = prisma;\n// SQL実行用のNeonクライアント\nconst sql = (0,_neondatabase_serverless__WEBPACK_IMPORTED_MODULE_0__.neon)(process.env.DATABASE_URL);\n// 初期データのセットアップ（都道府県と地方区分）\nasync function setupInitialData() {\n    // 地方区分の登録\n    const regionCount = await prisma.region.count();\n    if (regionCount === 0) {\n        await prisma.region.createMany({\n            data: _address_data__WEBPACK_IMPORTED_MODULE_2__.regions.map((region)=>({\n                    id: region.id,\n                    name: region.name\n                })),\n            skipDuplicates: true\n        });\n        console.log(`${_address_data__WEBPACK_IMPORTED_MODULE_2__.regions.length}件の地方区分を登録しました`);\n    }\n    // 都道府県の登録\n    const prefectureCount = await prisma.prefecture.count();\n    if (prefectureCount === 0) {\n        await prisma.prefecture.createMany({\n            data: _address_data__WEBPACK_IMPORTED_MODULE_2__.prefectures.map((prefecture)=>({\n                    code: prefecture.code,\n                    name: prefecture.name,\n                    region: prefecture.region\n                })),\n            skipDuplicates: true\n        });\n        console.log(`${_address_data__WEBPACK_IMPORTED_MODULE_2__.prefectures.length}件の都道府県を登録しました`);\n    }\n}\n// 住所データをデータベースに保存する関数\nasync function saveAddressesToDatabase(addresses) {\n    if (addresses.length === 0) return 0;\n    // 市区町村の登録（存在しない場合のみ）\n    const cityData = addresses.map((address)=>({\n            code: address.city_code,\n            name: address.city,\n            prefCode: address.pref_code\n        }));\n    // 重複を除去\n    const uniqueCities = cityData.filter((city, index, self)=>index === self.findIndex((c)=>c.code === city.code));\n    // 市区町村の一括登録\n    await prisma.city.createMany({\n        data: uniqueCities,\n        skipDuplicates: true\n    });\n    // 住所データの登録\n    const addressData = addresses.map((address)=>({\n            prefCode: address.pref_code,\n            cityCode: address.city_code,\n            townCode: address.town_code,\n            town: address.town,\n            koaza: address.koaza || null,\n            lat: address.lat,\n            lng: address.lng\n        }));\n    // 住所の一括登録\n    const result = await prisma.address.createMany({\n        data: addressData,\n        skipDuplicates: true\n    });\n    return result.count;\n}\n// バッチ処理用の関数（大量データを分割して処理）\nasync function batchProcessAddresses(addresses, batchSize = 1000, onProgress) {\n    let processed = 0;\n    const total = addresses.length;\n    // 初期データのセットアップ\n    await setupInitialData();\n    // バッチ処理\n    for(let i = 0; i < total; i += batchSize){\n        const batch = addresses.slice(i, i + batchSize);\n        const count = await saveAddressesToDatabase(batch);\n        processed += count;\n        // 進捗状況のコールバック\n        if (onProgress) {\n            onProgress(processed, total);\n        }\n    }\n    return processed;\n}\n// データベースから住所データを取得する関数\nasync function getAddressesByPrefecture(prefCode, limit = 1000, offset = 0) {\n    try {\n        let query = {};\n        if (prefCode) {\n            query = {\n                prefCode\n            };\n        }\n        const addresses = await prisma.address.findMany({\n            where: query,\n            include: {\n                prefecture: true,\n                city: true\n            },\n            take: limit,\n            skip: offset\n        });\n        return addresses.map((address)=>({\n                pref_code: address.prefCode,\n                pref: address.prefecture.name,\n                city_code: address.cityCode,\n                city: address.city.name,\n                town_code: address.townCode,\n                town: address.town,\n                koaza: address.koaza || \"\",\n                lat: address.lat,\n                lng: address.lng\n            }));\n    } catch (error) {\n        console.error(\"住所データの取得エラー:\", error);\n        return [];\n    }\n}\n// 住所データの総数を取得する関数\nasync function getTotalAddressCount() {\n    return prisma.address.count();\n}\n// 都道府県ごとの住所データ数を取得する関数\nasync function getAddressCountByPrefecture() {\n    const counts = await prisma.$queryRaw`\r\n    SELECT \r\n      p.code as \"prefCode\", \r\n      p.name as \"prefName\", \r\n      COUNT(a.id) as count \r\n    FROM addresses a\r\n    JOIN prefectures p ON a.\"prefCode\" = p.code\r\n    GROUP BY p.code, p.name\r\n    ORDER BY p.code\r\n  `;\n    return counts;\n}\n// 市区町村ごとの住所データ数を取得する関数\nasync function getAddressCountByCity(prefCode) {\n    const counts = await prisma.$queryRaw`\r\n    SELECT \r\n      c.code as \"cityCode\", \r\n      c.name as \"cityName\", \r\n      COUNT(a.id) as count \r\n    FROM addresses a\r\n    JOIN cities c ON a.\"cityCode\" = c.code\r\n    WHERE a.\"prefCode\" = ${prefCode}\r\n    GROUP BY c.code, c.name\r\n    ORDER BY c.code\r\n  `;\n    return counts;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/db.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@neondatabase"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Faddresses%2Froute&page=%2Fapi%2Faddresses%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Faddresses%2Froute.ts&appDir=C%3A%5CVercel%5Cprojects%5Cjapan-facility-database%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CVercel%5Cprojects%5Cjapan-facility-database&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();